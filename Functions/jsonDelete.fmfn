/*
 * =====================================
 * jsonDelete ( json ; keyOrIndex )
 * v2.0
 *
 * RETURNS:
 *	JSON Object with the specified property removed
 *
 * PARAMETERS:property
 *	json = the valid JSON string to modify
 *	keyOrIndex = the key of the property to remove or the index to remove of an array
 *
 * DEPENDENCIES:
 *	BaseElements Plugin version 3.0 or greater
 *
 * HISTORY:
 *	MODIFIED on 2016-DEC-05 John Renfrew, john@e-rwu.com
 *		actual Error is set into $jsonError, change to RWU standards
 *	MODIFIED on 2015-APR-21 Todd Geist, todd@geistinteractive.com
 *		return "?" on error and the actual Error is set into $json.error
 *	MODIFIED on 2015-JAN-07 Todd Geist, todd@geistinteractive.com
 *		changed the name to "jsonDelete ( json ; keyOrIndex )" and added support for handling an array
 *	CREATED on 2015-JAN-06 Todd Geist, todd@geistinteractive.com
 *
 * =====================================
 */

Let ( [
	js =
		List ( 
	"var json = '" & BE_JSONPath ( json ; "$" ) & "' ; " ;
	"var keyOrIndex = '" & keyOrIndex & "' ; " ;
	"var dotz = keyOrIndex.indexOf('.')" ;
	"var obj = JSON.parse(json);" ;
	)  & "¶¶" & 
	"if ( Array.isArray(json)){" & "¶" &
	"	keyOrIndex = parseInt(keyOrIndex);" & "¶" &
	"    json.splice(" & Quote ( keyOrIndex ) & ",1);" & "¶" &
	"    result = JSON.stringify(json)" & "¶" &
	"} else if (dotz < 0) {" & "¶" &
	"    delete obj[keyOrIndex];" & "¶" &
	"    result = JSON.stringify(obj);" & "¶" &
	"} else {" & "¶" &
	"	var frst = keyOrIndex.substring(0, dotz);" & "¶" &
	"    var scnd = keyOrIndex.substring(dotz +1, keyOrIndex.length);" & "¶" &
	"    delete obj[frst][scnd]; " & "¶" &
	"    result = JSON.stringify(obj);" & "¶" &
	"}" & "¶" &
	"result" & "¶" & ""
	;
	result = BE_EvaluateJavaScript ( js ) ;
	isError = not IsEmpty (
		FilterValues (
			LeftWords ( result ; 1 ) ;
			List (
				"SyntaxError" ;
				"RangeError" ;
				"EvalError" ;
				"ReferenceError" ;
				"TypeError" ;
				"URIError"
			)
		)
	) ;
	$jsonError = 
		Case (
			BE_Version = "?" ;
			"BaseElements plugin is not available" ;
			
			isError ;
			result ;
		
			/* else: clear the error */
			""
		)
] ;
	If ( isError ; "?" ; result )
)